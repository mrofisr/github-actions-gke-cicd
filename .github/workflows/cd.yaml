name: CI Build and CD to Kubernetes Cluster
on:
  workflow_dispatch:
jobs:
  BuildAndPush:
    name: Build Docker Images
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/mrofisr/simple:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  DeployToKubernetes:
    env:
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      GKE_CLUSTER: my-first-cluster-1
      GKE_ZONE: us-central1-c
      DEPLOYMENT_NAME: simple-go-api
    name: Deploy To Kubernetes
    needs: [BuildAndPush]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0.4.0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
      - name: Deploy
        run: |-
          cd kubernetes/
          kubectl delete all --all -n experiment
          kubectl apply -f namespace.yaml
          kubectl apply -f deployment.yaml
          kubectl apply -f autoscale.yaml
          kubectl apply -f ingress.yaml
          kubectl get all -n experiment
          kubectl get services -o wide -n experiment