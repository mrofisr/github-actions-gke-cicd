name: CI Build and CD to Kubernetes Cluster
on:
  push:
    branches:
      - "main"

jobs:
  Build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/mrofisr/simple:latest
  DockerImagesScan:
    name: Scanning Docker Images
    needs: [Build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Docker Scan Plugin
        run: |
          mkdir -p ~/.docker/cli-plugins && \
          curl https://github.com/docker/scan-cli-plugin/releases/latest/download/docker-scan_linux_amd64 -L -s -S -o ~/.docker/cli-plugins/docker-scan &&\
          chmod +x ~/.docker/cli-plugins/docker-scan
      - name: Check Docker Scan Version
        run: docker scan --accept-license --version
      - name: Scan Dockerfile
        run: docker scan --severity=medium --json --file Dockerfile --exclude-base simple-api:latest | tee -a output.json
      - name: Send notify to telegram
        run: curl -F document=@"output.json" https://api.telegram.org/bot5056744709:AAE7Z_1qzXpb68ucxqp-RZVhl2Flz2BVwQ0/sendDocument?chat_id=602946927
  DeployToKubernetes:
    name: Deploy To Kubernetes
    needs: [DockerImagesScan]
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: whoami