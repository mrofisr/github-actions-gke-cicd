name: CI & CD Main Process
on:
  push:
    branches:
      - 'main'

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/mrofisr/simple:latest
  docker-images-scan:
    name: Scanning Docker Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Docker Scan Plugin
        run: |
          mkdir -p ~/.docker/cli-plugins && \
          curl https://github.com/docker/scan-cli-plugin/releases/latest/download/docker-scan_linux_amd64 -L -s -S -o ~/.docker/cli-plugins/docker-scan &&\
          chmod +x ~/.docker/cli-plugins/docker-scan
      - name: Check Docker Scan Version
        run: docker scan --accept-license --version
      - name: Scan Dockerfile
        run: docker scan --severity=medium --json --file Dockerfile --exclude-base simple-api:latest | tee -a output.json
      - name: Send notify to telegram
        run: curl -F document=@"output.json" https://api.telegram.org/bot5056744709:AAE7Z_1qzXpb68ucxqp-RZVhl2Flz2BVwQ0/sendDocument?chat_id=602946927
  # setup-build-publish-deploy:
  #   name: Setup, Build, Publish, and Deploy
  #   env:
  #     PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  #     GKE_CLUSTER: cluster-1    # Add your cluster name here.
  #     GKE_ZONE: us-central1-c   # Add your cluster zone here.
  #     DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  #     IMAGE: static-site
  #   runs-on: ubuntu-latest
  #   environment: production
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
  #     with:
  #       service_account_key: ${{ secrets.GKE_SA_KEY }}
  #       project_id: ${{ secrets.GKE_PROJECT }}
  #   - run: |-
  #       gcloud --quiet auth configure-docker
  #   - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
  #     with:
  #       cluster_name: ${{ env.GKE_CLUSTER }}
  #       location: ${{ env.GKE_ZONE }}
  #       credentials: ${{ secrets.GKE_SA_KEY }}
  #   - name: Set up Kustomize
  #     run: |-
  #       curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
  #       chmod u+x ./kustomize
  #   - name: Deploy
  #     run: |-
  #       ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
  #       ./kustomize build . | kubectl apply -f -
  #       kubectl rollout status deployment/$DEPLOYMENT_NAME
  #       kubectl get services -o wide